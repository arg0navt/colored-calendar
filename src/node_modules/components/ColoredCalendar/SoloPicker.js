import React from "react";
import moment from "moment";
import MonthPiker from "./MonthPicker";
import PropTypes from "prop-types";
import momentPropTypes from "react-moment-proptypes";
import "moment/locale/ru";
import "./picker.scss";

export default class SoloPicker extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      date: null,
      oneActiveDay: null,
    };
    this.setRange = this.setRange.bind(this);
    this.setActiveMonth = this.setActiveMonth.bind(this);
  }
  getChildContext() {
    return {
      colors: this.props.colors,
      setActiveMonth: this.setActiveMonth,
      setRange: this.setRange,
      switchMonth: this.props.switchMonth,
      limit: this.props.limit,
      oneActiveDay: this.state.oneActiveDay
    };
  }
  componentWillMount() {
    moment.locale(this.props.lang, {
      week: {dom: 1}
    });
    this.setState(prevState => {
      prevState.date = this.props.initDate;
      return prevState;
    });
  }
  setRange(newDate) {
    this.setState({oneActiveDay: newDate}, () => this.props.switchDays(newDate));
  }
  setActiveMonth(date) {
    this.setState({date});
  }
  render() {
    return (
      <div className="Date-RangePicker">
        <MonthPiker
          type={"left"}
          date={this.props.initDate}
        />
      </div>
    );
  }
}

SoloPicker.defaultProps = {
  initDate: moment(`${moment().format("YYMM")}01000000000`, "YYMMDDHHmmss000"),
  lang: "ru",
  limit: 0,
  colors: []
};

SoloPicker.PropType = {
  initDate: momentPropTypes.momentObj,
  limit: PropTypes.number,
  lang: PropTypes.string,
  colors: PropTypes.array,
  switchMonth: PropTypes.func,
  switchDays: PropTypes.func,
};

SoloPicker.childContextTypes = {
  colors: PropTypes.array,
  setActiveMonth: PropTypes.func,
  setRange: PropTypes.func,
  switchMonth: PropTypes.func,
  limit: PropTypes.number,
  oneActiveDay: PropTypes.object
};